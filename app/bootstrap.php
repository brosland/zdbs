<?php

// Load Nette Framework or autoloader generated by Composer
require __DIR__ . '/../libs/composer/autoload.php';

$configurator = new Nette\Configurator();

// Enable Nette Debugger for error visualisation & logging
//$configurator->setDebugMode(TRUE);
$configurator->enableDebugger(__DIR__ . '/../log');

// Specify folder for cache
$configurator->setTempDirectory(__DIR__ . '/../temp');

// Enable RobotLoader - this will load all classes automatically
$configurator->createRobotLoader()
	->addDirectory(__DIR__)
	->addDirectory(__DIR__ . '/../libs')
	->register();

// Register Certificates extension
$configurator->onCompile[] = function ($configurator, $compiler) {
    $compiler->addExtension('certificates', new CertificatesModule\Config\Extension());
};

Kdyby\Annotations\DI\AnnotationsExtension::register($configurator);
Kdyby\Autowired\DI\AutowiredExtension::register($configurator);
Kdyby\BootstrapFormRenderer\DI\RendererExtension::register($configurator);
Kdyby\Console\DI\ConsoleExtension::register($configurator);
Kdyby\Curl\DI\CurlExtension::register($configurator);
Kdyby\Doctrine\DI\OrmExtension::register($configurator);
Kdyby\Events\DI\EventsExtension::register($configurator);
Kdyby\Replicator\DI\ReplicatorExtension::register($configurator);

// Create Dependency Injection container from config.neon file
$configurator->addConfig(__DIR__ . '/config/config.neon');
$configurator->addConfig(__DIR__ . '/config/config.local.neon', $configurator::NONE); // none section
$container = $configurator->createContainer();

// Configure and run the application!
$container->application->run();